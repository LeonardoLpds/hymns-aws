service: hymns-aws
frameworkVersion: '3'

custom:
  tableName: 'hymns-table-${sls:stage}'
  stage: ${opt:stage, "dev"}
  dynamodb:
    stages:
      - ${sls:stage}
    start:
      migrate: true

plugins:
  - serverless-dynamodb-local
  - serverless-offline

provider:
  name: aws
  runtime: nodejs18.x
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - dynamodb:Query
            - dynamodb:Scan
            - dynamodb:GetItem
            - dynamodb:PutItem
            - dynamodb:UpdateItem
            - dynamodb:DeleteItem
          Resource:
            - Fn::GetAtt: [ HymnsTable, Arn ]
  environment:
    HYMNS_TABLE: ${self:custom.tableName}

functions:
  api:
    handler: dist/index.handler
    events:
      - httpApi: '*'

resources:
  Resources:
    HymnsTable:
      Type: AWS::DynamoDB::Table
      Properties:
        AttributeDefinitions:
          - AttributeName: PK
            AttributeType: S
          - AttributeName: SK
            AttributeType: S
          - AttributeName: GSI
            AttributeType: S
        KeySchema:
          - AttributeName: PK
            KeyType: HASH
          - AttributeName: SK
            KeyType: RANGE
        GlobalSecondaryIndexes:
          - IndexName: GSI
            KeySchema:
              - AttributeName: GSI
                KeyType: HASH
              - AttributeName: SK
                KeyType: RANGE
            Projection:
              ProjectionType: ALL
        BillingMode: PAY_PER_REQUEST
        TableName: ${self:custom.tableName}